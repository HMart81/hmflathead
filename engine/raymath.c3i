/************************************ LICENSE *******************************************
# hmflathead GPL Source Code
# Copyright (C) 2025 Hilario Martins.
# 
# This file is part of the hmflathead GPL Source Code ("hmflathead Source Code")
# 
# hmflathead Source Code is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# hmflathead Source Code is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with hmflathead Source Code.  If not, see <http://www.gnu.org/licenses/>.
# 
# In addition, the hmflathead Source Code is also subject to certain additional terms. 
# You should have received a copy of these additional terms immediately following the terms and conditions of the GNU General Public License 
# which accompanied the hmflathead Source Code.  If not, please request a copy in writing from me at the address below.
# 
# If you have questions concerning this license or the applicable additional terms, you may contact in writing 
# Hilario Martins, Rua de Sanguinhedo 1010 4850-545 Vieira Do Minho Portugal.
# 
*********************************************************************************************************************************************/

module thirdparty::raylib5::rmath;

import thirdparty::raylib5::rl;


// region vector 2 math
fn Vector2 vector2Scale(Vector2 v, float scaler) @extern("Vector2Scale");
fn Vector2 vector2Add(Vector2 v1, Vector2 v2) @extern("Vector2Add");
fn Vector2 vector2MoveTowards(Vector2 v, Vector2 target, float maxDistance) @extern("Vector2MoveTowards");
// Calculate linear interpolation between two vectors
fn Vector2 vector2Lerp(Vector2 v1, Vector2 v2, float amount) @extern("Vector2Lerp");
// end_region vector 2 math
